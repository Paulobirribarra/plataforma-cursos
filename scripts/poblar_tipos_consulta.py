import os
import sys
import django

# Agregar el directorio ra√≠z al PYTHONPATH
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "plataforma_cursos.settings")
django.setup()

from membresias.models import MembershipPlan, ConsultationType

def poblar_tipos_consulta():
    """
    Configura los tipos de consultas seg√∫n el modelo de negocio
    """
    
    # Obtener los planes de membres√≠a
    try:
        plan_basico = MembershipPlan.objects.get(slug="basico")
        plan_intermedio = MembershipPlan.objects.get(slug="intermedio") 
        plan_premium = MembershipPlan.objects.get(slug="premium")
    except MembershipPlan.DoesNotExist:
        print("‚ùå Error: Los planes de membres√≠a no est√°n configurados.")
        print("   Ejecuta primero: python scripts/poblar_membresias.py")
        return

    # Tipos de consulta seg√∫n el modelo de negocio
    tipos_consulta = [
        {
            "name": "Asesor√≠a Grupal",
            "slug": "asesoria-grupal",
            "description": """
            Sesi√≥n grupal de asesor√≠a financiera donde podr√°s:
            ‚Ä¢ Hacer preguntas sobre inversiones
            ‚Ä¢ Recibir orientaci√≥n sobre tu portafolio
            ‚Ä¢ Aprender de las consultas de otros participantes
            ‚Ä¢ Obtener estrategias generales de inversi√≥n
            
            Duraci√≥n: 45 minutos
            Modalidad: Videoconferencia grupal
            Participantes: Hasta 15 personas
            """,
            "is_individual": False,
            "duration_minutes": 45,
            "plans": [plan_basico, plan_intermedio]
        },
        {
            "name": "Consulta Individual Premium",
            "slug": "consulta-individual-premium", 
            "description": """
            Sesi√≥n personalizada 1:1 con experto financiero que incluye:
            ‚Ä¢ An√°lisis detallado de tu situaci√≥n financiera
            ‚Ä¢ Estrategia de inversi√≥n personalizada
            ‚Ä¢ Revisi√≥n de portafolio actual
            ‚Ä¢ Plan de acci√≥n espec√≠fico para tus objetivos
            ‚Ä¢ Seguimiento de progreso
            
            Duraci√≥n: 60 minutos
            Modalidad: Videoconferencia privada
            Incluye: Reporte personalizado post-consulta
            """,
            "is_individual": True,
            "duration_minutes": 60,
            "plans": [plan_premium]
        },
        {
            "name": "Mentor√≠as Especializadas",
            "slug": "mentorias-especializadas",
            "description": """
            Sesiones de mentor√≠a avanzada para temas espec√≠ficos:
            ‚Ä¢ Trading avanzado
            ‚Ä¢ An√°lisis t√©cnico profundo
            ‚Ä¢ Estrategias de diversificaci√≥n
            ‚Ä¢ Planificaci√≥n de retiro
            ‚Ä¢ Optimizaci√≥n fiscal
            
            Duraci√≥n: 90 minutos
            Modalidad: Videoconferencia individual
            Incluye: Material especializado y templates
            """,
            "is_individual": True,
            "duration_minutes": 90,
            "plans": [plan_premium]
        }
    ]

    print("üöÄ Configurando tipos de consultas...")
    
    for tipo_data in tipos_consulta:
        tipo, created = ConsultationType.objects.get_or_create(
            slug=tipo_data["slug"],
            defaults={
                "name": tipo_data["name"],
                "description": tipo_data["description"],
                "is_individual": tipo_data["is_individual"],
                "duration_minutes": tipo_data["duration_minutes"],
                "is_active": True
            }
        )
        
        # Asignar planes de membres√≠a
        tipo.membership_plans.set(tipo_data["plans"])
        
        status = "‚úÖ Creado" if created else "‚ÑπÔ∏è  Actualizado"
        modalidad = "Individual" if tipo.is_individual else "Grupal"
        planes_str = ", ".join([p.name for p in tipo_data["plans"]])
        
        print(f"{status}: {tipo.name}")
        print(f"   üìã Modalidad: {modalidad}")
        print(f"   ‚è±Ô∏è  Duraci√≥n: {tipo.duration_minutes} minutos")
        print(f"   üéØ Planes: {planes_str}")
        print()

    print("üéØ Tipos de consultas configurados exitosamente!")
    print("\nüìä Resumen del modelo de consultas:")
    print("‚Ä¢ B√ÅSICO: 1 asesor√≠a grupal mensual (45 min)")
    print("‚Ä¢ INTERMEDIO: 2 asesor√≠as grupales mensuales (45 min c/u)")  
    print("‚Ä¢ PREMIUM: 1 consulta individual mensual (60 min) + mentor√≠as especializadas")
    print("\nüí° Las consultas se pueden solicitar desde el panel de usuario.")

if __name__ == "__main__":
    poblar_tipos_consulta()
