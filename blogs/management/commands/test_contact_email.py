# blogs/management/commands/test_contact_email.py
from django.core.management.base import BaseCommand
from django.core.mail import send_mail
from django.conf import settings
import logging

logger = logging.getLogger(__name__)

class Command(BaseCommand):
    help = 'Prueba el env√≠o de emails de contacto'

    def handle(self, *args, **options):
        try:
            subject = "‚úÖ Prueba de configuraci√≥n - Sistema de contacto"
            message = """
            üéâ ¬°Excelente! Tu sistema de notificaciones de contacto est√° funcionando correctamente.
            
            ‚ÑπÔ∏è Detalles del sistema:
            - Formulario web: ‚úÖ Funcional
            - Base de datos: ‚úÖ Almacenando mensajes
            - Notificaciones email: ‚úÖ Operativas
            - Panel admin: ‚úÖ Listo para gesti√≥n
            
            üìã Pr√≥ximos pasos:
            1. Actualizar n√∫mero de WhatsApp en el template
            2. Configurar email de destino en variables de entorno
            3. Probar el flujo completo con una consulta real
            
            üí° Con ~100 visitas/mes, espera 2-5 consultas mensuales.
            
            --
            Sistema Asesor√≠as Futuro LTD
            """
            
            send_mail(
                subject,
                message,
                settings.DEFAULT_FROM_EMAIL,
                [settings.CONTACT_EMAIL],
                fail_silently=False,
            )
            
            self.stdout.write(
                self.style.SUCCESS(
                    f'‚úÖ Email de prueba enviado exitosamente a {settings.CONTACT_EMAIL}'
                )
            )
            
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå Error enviando email: {e}')
            )
            logger.error(f"Error en test_contact_email: {e}")
